name: "kurma-aci-console"

# Set the base stage4 as build dependencies. The final output of this is an ACI
# image of a buildroot system, but buildroot is compiled with the stage4 image.
build_depends [ { package: "gentoo-stage4" } ]

include_files [
  "../../output/console.aci"
  "../../output/code.tar.gz"
  "manifest.json"
  "spawn.json"
  "start.sh"
  # don't like this, but spawn is in util and not referenced by kurma, so godep
  # doesn't grab it.
  "../../../util/spawn/spawn.go"
]

# THe output of the build script will be an ACI image of the console.
snapshot_path: "/aci"

build (
    source /etc/profile
    export BUILDPATH=`pwd`
    export INSTALLPATH=/aci/rootfs

    mkdir -p $INSTALLPATH

    # extract the existing console aci
    (
      tar xzf console.aci -C /aci
    )

    # setup the image
    (
      cd $INSTALLPATH
      mv $BUILDPATH/spawn.json etc/spawn.conf
      mv $BUILDPATH/start.sh start.sh
      chmod a+x start.sh
    )

    # compile the kurma cli and spawn binary
    (
      export GOPATH="$BUILDPATH/go:$BUILDPATH/go/src/github.com/apcera/kurma/Godeps/_workspace"
      mkdir -p $BUILDPATH/go/src
      tar xzf code.tar.gz -C $BUILDPATH/go/src
      go build -a -o $INSTALLPATH/usr/bin/kurma-cli $BUILDPATH/go/src/github.com/apcera/kurma/kurma-cli.go
      go build -a -o $INSTALLPATH/sbin/spawn $BUILDPATH/spawn.go
    )

    # setup the ACI manifest
    mv manifest.json /aci/manifest
)